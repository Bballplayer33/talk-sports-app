{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lminv\\\\Desktop\\\\Bootcamp\\\\Homework\\\\projects\\\\talk-sports-app\\\\talk-sports\\\\client\\\\src\\\\components\\\\Home\\\\Home.jsx\";\nimport './Home.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { io } from 'socket.io-client'; // import {UsersRoute, host} from '../utils/API';\n// import ChatContainer from '../components/Chat/ChatContainer';\n// import Contacts from '../components/Contacts';\n// import Welcome from '../components/Welcome';\n// function Home() {\n//     const navigate = useNavigate();\n//     const socket = useRef();\n//     const [contacts, setContacts] = useState([]);\n//     const [currentChat, setCurrentChat] = useState(undefined);\n//     const [currentUser, setCurrentUser] = useState(undefined);\n//     useEffect(async () => {\n//         if (!localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)) {\n//             navigate('/Login');\n//         } else {\n//             setCurrentUser(await JSON.parse(\n//                 localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\n//             ));\n//         }\n//     }, []);\n//     useEffect(async () => {\n//         if (currentUser) {\n//             if (currentUser.isAvatarImageSet) {\n//                 const data = await axios.get('${allUserRoute}/${currentUser._id}');\n//                 setContacts(data.data);\n//             } else {\n//                 navigate('/SetAvatar');\n//             }\n//         }\n//     }, [currentUser]);\n//     const handleChatChange = (chat) => {\n//         setCurrentChat(chat);\n//     };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is a test.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","useNavigate","Link","io","Home"],"sources":["C:/Users/lminv/Desktop/Bootcamp/Homework/projects/talk-sports-app/talk-sports/client/src/components/Home/Home.jsx"],"sourcesContent":["import './Home.css';\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport {useNavigate, Link} from 'react-router-dom';\r\nimport {io} from 'socket.io-client';\r\n// import {UsersRoute, host} from '../utils/API';\r\n// import ChatContainer from '../components/Chat/ChatContainer';\r\n// import Contacts from '../components/Contacts';\r\n// import Welcome from '../components/Welcome';\r\n\r\n\r\n// function Home() {\r\n//     const navigate = useNavigate();\r\n//     const socket = useRef();\r\n//     const [contacts, setContacts] = useState([]);\r\n//     const [currentChat, setCurrentChat] = useState(undefined);\r\n//     const [currentUser, setCurrentUser] = useState(undefined);\r\n\r\n//     useEffect(async () => {\r\n//         if (!localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)) {\r\n//             navigate('/Login');\r\n//         } else {\r\n//             setCurrentUser(await JSON.parse(\r\n//                 localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY)\r\n//             ));\r\n//         }\r\n//     }, []);\r\n\r\n//     useEffect(async () => {\r\n//         if (currentUser) {\r\n//             if (currentUser.isAvatarImageSet) {\r\n//                 const data = await axios.get('${allUserRoute}/${currentUser._id}');\r\n//                 setContacts(data.data);\r\n//             } else {\r\n//                 navigate('/SetAvatar');\r\n//             }\r\n//         }\r\n//     }, [currentUser]);\r\n//     const handleChatChange = (chat) => {\r\n//         setCurrentChat(chat);\r\n//     };\r\n\r\nconst Home = () => {\r\n    return (\r\n       <>\r\n            <div className='empty'>\r\n                <p>This is a test.</p>\r\n            </div>\r\n            \r\n      \r\n            {/* <Container>\r\n                <div className='containerdiv'>\r\n                    <Contacts contacts={contacts} changeChat ={handleChatChange} />\r\n                    {currentChat === undefined ?\r\n                    (\r\n                        <Welcome />\r\n                    ) :\r\n                    (\r\n                        <ChatContainer currentChat={currentChat} socket={socket} />\r\n                    )}\r\n                </div>\r\n            </Container> */}\r\n        </>\r\n    );\r\n\r\n\r\n};\r\n\r\n\r\nexport default Home;\r\n\r\n"],"mappings":";AAAA,OAAO,YAAP;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,IAArB,QAAgC,kBAAhC;AACA,SAAQC,EAAR,QAAiB,kBAAjB,C,CACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EACf,oBACG;IAAA,uBACK;MAAK,SAAS,EAAC,OAAf;MAAA,uBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADL,iBADH;AAuBH,CAxBD;;KAAMA,I;AA2BN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}